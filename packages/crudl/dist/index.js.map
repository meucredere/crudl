{"version":3,"sources":["webpack://crudl/webpack/universalModuleDefinition","webpack://crudl/webpack/bootstrap","webpack://crudl/./src/helpers/cases.js","webpack://crudl/./src/helpers/plurals.js","webpack://crudl/./src/executors/helpers.js","webpack://crudl/./src/executors/index.js","webpack://crudl/./src/index.js","webpack://crudl/./src/helpers/urls.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","snakeCase","operation","snake","replace","letter","index","toLowerCase","multiple","split","push","word","irregularPlurals","plural","pop","join","shouldUpdateItemOrItems","shouldOverwriteExistingItems","data","config","preserve","err","extractResponseDataArray","items","identifier","reduce","obj","item","shouldSpreadExistingData","spread","spreadExistingData","itemOrItems","clean","modified","loading","failure","start","payload","crudl","success","response","result","undefined","indexOf","extractResponseData","error","message","CRUDL","console","log","Promise","resolve","this","_client","CLIENT","custom","constructor","operations","keys","OPERATIONS","include","exclude","filter","reduced","extractor","overwrite","endpoint","identified","endpoints","METHODS","methods","constant","type","toUpperCase","client","constants","method","executor","url","params","map","param","match","urlCompiler","request","reject","then","catch","executors","read","update","delete","list"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crudl\"] = factory();\n\telse\n\t\troot[\"crudl\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import plural from '@/helpers/plurals';\n\nexport default function snakeCase(key, operation = {}) {\n  let snake = key\n    // FooBar -> Foo_Bar, fooBar -> foo_Bar\n    .replace(/[A-Z]/g, (letter, index) => `${index > 0 ? '_' : ''}${letter}`)\n    // foo_Bar -> foo_bar\n    .toLowerCase();\n\n  if (operation.multiple) {\n    // pluralizes the last word and pushes it back to the array, like\n    // foo_bar -> foo_bars, some_fish -> some_fish, car -> cars\n\n    snake = snake.split('_');\n    snake.push(plural(snake.pop()));\n    snake = snake.join('_');\n  }\n\n  return snake;\n}\n","// based on https://github.com/sindresorhus/plur\n// but optimized to crudl's needs so it weights a bit less\n\nimport irregularPlurals from 'irregular-plurals/irregular-plurals.json';\n\nexport default function plural(word = '') {\n  // catch irregular plural nouns red-handed\n  if (irregularPlurals[word]) {\n    return irregularPlurals[word];\n  }\n\n  return `${word\n    .replace(/(?:s|x|z|ch|sh)$/i, '$&e')\n    .replace(/([^aeiou])y$/i, '$1ie')}s`;\n\n  // eslint-disable-next-line no-extra-semi\n};\n","// returns 'items' as result property for multiple items operations or 'item' for single ones\n// so create -> item, read -> item, list -> items, (...)\nexport function shouldUpdateItemOrItems(operation) {\n  return operation.multiple ? 'items' : 'item';\n}\n\n// internal crudl control to check if it should preseve previous data on new requests, for example,\n// appending new items to the existing list or refreshing identified items without flashing the page\nexport function shouldOverwriteExistingItems(data, operation) {\n  try {\n    return !data[operation.name].config.preserve;\n  } catch (err) {\n    return true;\n  }\n}\n\n// transforms data like\n// [{ id: 1, name: a }, { id: 12, name: b }]\n// into\n// { 1: { id: 1, name: a }, 12: { id: 12, name: b } }\nexport function extractResponseDataArray(items = [], identifier = 'id') {\n  function reducer(obj, item) {\n    // eslint-disable-next-line no-param-reassign\n    obj[item[identifier]] = item;\n\n    return obj;\n  }\n\n  return items.reduce(reducer, {});\n}\n\nexport function extractResponseData(key, operation, config, data, response) {\n  const {\n    multiple,\n  } = operation;\n\n  let result;\n\n  try {\n    result = key ? response.data[key] : response.data;\n  } catch (err) { /* */ }\n\n  if ([undefined, null].indexOf(result) > -1) {\n    result = multiple ? [] : {};\n  }\n\n  // returns the item if it is a single item operation\n  if (!multiple) {\n    return result;\n  }\n\n  // returns the new keyed object of items for multiple items operations that do not preserve data\n  if (shouldOverwriteExistingItems(data, operation)) {\n    return extractResponseDataArray(result, config.identifier);\n  }\n\n  // appends new results to the existing items data if the request is configured to preserve it\n  // worth noticing that it overwrites (updates?) existing items using the same primary key\n  return {\n    ...data[operation.name][shouldUpdateItemOrItems(operation)],\n    // transforms the data array into a keyed object using the\n    // custom primary key config (default identifier's fallback is \"id\")\n    ...extractResponseDataArray(result, config.identifier),\n  };\n}\n\n// should the modifier modify the original data object?\nexport function shouldSpreadExistingData(config) {\n  return config.spread;\n}\n\n// copies the original data object so it stays intact\nexport function spreadExistingData(operation, data) {\n  const itemOrItems = shouldUpdateItemOrItems(operation);\n\n  return {\n    ...data,\n    [operation.name]: {\n      ...data[operation.name],\n      [itemOrItems]: {\n        ...data[operation.name][itemOrItems],\n      },\n    },\n  };\n}\n","import {\n  // item: [create, read, update, delete]\n  // items: [list]\n  shouldUpdateItemOrItems,\n\n  // should the new request overwrite the existing data?\n  // this is useful for things like items pagination or\n  // refreshing the page without \"flashing\" it to empty state and back\n  shouldOverwriteExistingItems,\n\n  // unwraps results, handles pluralized keys,\n  // transforms data like [{ id: 1 }, { id: 2 }] into { 1: { id: 1 }, 2: { id: 2 }}\n  // ... and more :D\n  extractResponseData,\n\n  // should the original data object be modified?\n  shouldSpreadExistingData,\n\n  // makes a copy of the original data\n  spreadExistingData,\n} from '@/executors/helpers';\n\n// cleans data: resets the operation data to its initial schema\nexport function clean(key, operation, config, data) {\n  const modified = shouldSpreadExistingData(config) ? spreadExistingData(operation, data) : data;\n\n  modified[operation.name][shouldUpdateItemOrItems(operation)] = {};\n  modified[operation.name].loading = false;\n  modified[operation.name].failure = null;\n  modified[operation.name].config = {};\n\n  return modified;\n}\n\n// starts the request: cleans errors and starts loading\nexport function start(key, operation, config, data, payload = {}) {\n  const modified = shouldSpreadExistingData(config) ? spreadExistingData(operation, data) : data;\n\n  // config should always be set first on start,\n  // so configs like 'preserve' are taken into account\n  modified[operation.name].config = { ...payload.crudl };\n\n  if (shouldOverwriteExistingItems(data, operation)) {\n    modified[operation.name][shouldUpdateItemOrItems(operation)] = {};\n  }\n\n  modified[operation.name].loading = true;\n  modified[operation.name].failure = null;\n\n  return modified;\n}\n\n// successfull request: sets the new data, cleans errors and stops loading\nexport function success(key, operation, config, data, response = {}) {\n  const modified = shouldSpreadExistingData(config) ? spreadExistingData(operation, data) : data;\n\n  modified[operation.name][shouldUpdateItemOrItems(operation)] = extractResponseData(\n    key,\n    operation,\n    config,\n    data,\n    response,\n  );\n\n  modified[operation.name].failure = null;\n  modified[operation.name].loading = false;\n  modified[operation.name].config = {};\n\n  return modified;\n}\n\n// failed request: sets error details and stops loading\nexport function failure(key, operation, config, data, error = {}) {\n  const modified = shouldSpreadExistingData(config) ? spreadExistingData(operation, data) : data;\n\n  // overwrite current data on new request failure?\n  if (shouldOverwriteExistingItems(data, operation)) {\n    modified[operation.name][shouldUpdateItemOrItems(operation)] = {};\n  }\n\n  // checks if the server responded with something (like validation errors)\n  // otherwise, returns the error object itself\n  let message = error;\n\n  if (error.response) {\n    message = error.response.data || error.response;\n  }\n\n  modified[operation.name].failure = message;\n  modified[operation.name].loading = false;\n  modified[operation.name].config = {};\n\n  return modified;\n}\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_client\"] }] */\n\nimport snakeCase from '@/helpers/cases';\nimport urlCompiler from '@/helpers/urls';\n\nimport * as executors from '@/executors/index';\n\nexport default class CRUDL {\n  static OPERATIONS = {\n    create: {\n      name: 'create',\n      multiple: false, // is the request's result an array of items?\n      identified: false, // does the endpoint require the item's identifier? (as in /posts/:id)\n    },\n    read: {\n      name: 'read',\n      multiple: false,\n      identified: true,\n    },\n    update: {\n      name: 'update',\n      multiple: false,\n      identified: true,\n    },\n    delete: {\n      name: 'delete',\n      multiple: false,\n      identified: true,\n    },\n    list: {\n      name: 'list',\n      multiple: true,\n      identified: false,\n    },\n  };\n\n  static METHODS = {\n    create: 'post', // operations' request http verb\n    read: 'get',\n    update: 'put',\n    delete: 'delete',\n    list: 'get',\n  };\n\n  static CLIENT() {\n    // eslint-disable-next-line no-console\n    console.log('No HTTP client was provided to crudl. Using Promise.resolve() for mocking purposes.');\n\n    return Promise.resolve();\n  }\n\n  static get client() {\n    if (this._client && Object.prototype.hasOwnProperty.call(this, '_client')) {\n      return this._client;\n    }\n\n    return this.CLIENT;\n  }\n\n  static set client(custom) {\n    this._client = custom;\n\n    return this._client;\n  }\n\n  constructor(key, config = {}) {\n    this.key = key;\n    this.config = config;\n  }\n\n  // makes sure that included and excluded operations are valid, like\n  // include ['create', 'asd']                       => ['create']\n  // exclude ['create', 'read']                      => ['update', 'delete', 'list']\n  // include ['create', 'read'] + exclude ['create'] => ['read']\n  get operations() {\n    const operations = Object.keys(CRUDL.OPERATIONS);\n\n    const {\n      include = operations,\n      exclude = [],\n    } = this.config;\n\n    return operations\n      // allows default operations only\n      .filter((operation) => include.indexOf(operation) > -1)\n\n      // filters out excluded operations\n      .filter((operation) => exclude.indexOf(operation) === -1)\n\n      // returns included operations, like\n      // {\n      //   create: { multiple: false, identified: false, (...) },\n      //   read: { multiple: false, identified: true, (...) },\n      //   (...)\n      // }\n      .reduce((reduced, operation) => ({\n        ...reduced,\n        [operation]: CRUDL.OPERATIONS[operation],\n      }), {});\n  }\n\n  // reduces generators to only included CRUDL operations, and also\n  // overwrites the default values with custom ones in case they were given\n  reduce(extractor, overwrite = {}) {\n    const {\n      operations,\n    } = this;\n\n    return {\n      ...Object.keys(operations).reduce((reduced, operation) => ({\n        ...reduced,\n        [operation]: extractor(operations[operation]),\n      }), {}),\n\n      // overwrites default values with custom ones in case they were given\n      ...overwrite,\n    };\n  }\n\n  // returns included operations' keys, like\n  // {\n  //   create: post,\n  //   read: post,\n  //   list: posts,\n  //   (...)\n  // }\n  get keys() {\n    // snakeCase('archivedPost', { multiple: true }) => archived_posts\n    // snakeCase('archivedPost', { multiple: false }) => archived_post\n    return this.reduce(\n      (operation) => snakeCase(this.key, operation),\n      // custom keys\n      this.config.keys,\n    );\n  }\n\n  // returns included operations' endpoints, like\n  // {\n  //   create: /posts,\n  //   update: /posts/:id,\n  //   (...)\n  // }\n  get endpoints() {\n    const endpoint = snakeCase(this.key, { multiple: true });\n    const identifier = this.config.identifier || 'id';\n\n    // generates the pluralized \"/posts\" endpoints\n    // and, for identified operations, adds the identifier key to generate \"/posts/:id\"\n    return this.reduce(\n      (operation) => `/${endpoint}${operation.identified ? `/:${identifier}` : ''}`,\n      // custom endpoints\n      this.config.endpoints,\n    );\n  }\n\n  // returns included operations' methods, like\n  // {\n  //   create: post,\n  //   read: get,\n  //   update: put,\n  //   (...)\n  // }\n  get methods() {\n    return this.reduce(\n      (operation) => CRUDL.METHODS[operation.name],\n      // custom methods\n      this.config.methods,\n    );\n  }\n\n  // returns included operations' constants, like\n  // {\n  //   create: {\n  //     start: CRUDL/POST/CREATE/START,\n  //     success: CRUDL/POST/CREATE/SUCCESS,\n  //     (...)\n  //   },\n  //   update: {\n  //     start: CRUDL/POST/UPDATE/START,\n  //     success: CRUDL/POST/UPDATE/SUCCESS,\n  //     (...)\n  //   },\n  //   (...)\n  // }\n  get constants() {\n    const {\n      key,\n    } = this;\n\n    const constant = (operation, type) => `CRUDL/${snakeCase(key)}/${operation}/${type}`.toUpperCase();\n\n    return this.reduce((operation) => ({\n      clean: constant(operation.name, 'clean'),\n      start: constant(operation.name, 'start'),\n      success: constant(operation.name, 'success'),\n      failure: constant(operation.name, 'failure'),\n    }));\n  }\n\n  // returns included operations' initial data schema, like\n  // {\n  //   create: {\n  //     loading: false,\n  //     failure: null,\n  //     item: {},\n  //     config: {},\n  //   },\n  //   list: {\n  //     loading: false,\n  //     failure: null,\n  //     items: {},\n  //     config: {},\n  //   },\n  //   (...)\n  // }\n  get schema() {\n    return this.reduce((operation) => ({\n      loading: false,\n      failure: null,\n      [operation.multiple ? 'items' : 'item']: {},\n      config: {},\n    }));\n  }\n\n  // returns included operations' requests, like\n  // {\n  //   create() { createStartModifier(); createSuccessModifier() || createFailureModifier() },\n  //   read() { readStartModifier(); readSuccessModifier() || readFailureModifier() },\n  //   (...)\n  // }\n  get requests() {\n    const client = this.config.client || CRUDL.client;\n\n    return this.reduce((operation) => {\n      const {\n        start,\n        success,\n        failure,\n      } = this.constants[operation.name];\n\n      const endpoint = this.endpoints[operation.name];\n      const method = this.methods[operation.name];\n\n      // \"executor\" is designed to impersonate the default action callback\n      // it may or may not be a function,\n      // so middle functions may be needed to handle cases in which it is not\n      //\n      // to illustrate,\n      // in Redux, it is dispatch()\n      // in Vuex, it is { commit() }\n      return (executor, payload) => {\n        const {\n          // compiles the url with named parameters, like\n          // /posts/:id -> /posts/1\n          url,\n          // removes said named parameters from the sending data\n          // so the result url isn't /posts/1?id=1 but /posts/1 instead\n          data,\n        } = urlCompiler(endpoint, payload);\n\n        // remove crudl's internal request config from the request data\n        delete data.crudl;\n\n        const request = {\n          method,\n          [method === 'get' ? 'params' : 'data']: data,\n        };\n\n        return new Promise((resolve, reject) => {\n          // calls the start modifier executor to set loading state as true, etc\n          executor(start, payload);\n\n          return client(url, request)\n            // calls the success modifier executor with the http client's response object\n            .then((response) => {\n              executor(success, response);\n              resolve(response);\n            })\n            // calls the failure modifier executor with the http client's error object\n            .catch((error) => {\n              executor(failure, error);\n              reject(error);\n            });\n\n          // prevents unhandled catch warnings\n        }).catch(() => {});\n      };\n    });\n  }\n\n  // returns included operations' cleaners, like\n  // {\n  //   create() { createCleanModifier() },\n  //   read() { readCleanModifier() },\n  //   (...)\n  // }\n  get cleaners() {\n    return this.reduce((operation) => (executor) => executor(this.constants[operation.name].clean));\n  }\n\n  // returns included operations' modifiers, like\n  // {\n  //   CRUDL/MODULE_KEY/READ/START: readStartModifier(...),\n  //   CRUDL/MODULE_KEY/READ/SUCCESS: readSuccessModifier(...),\n  //   (...)\n  //   CRUDL/MODULE_KEY/DELETE/START: deleteStartModifier(...),\n  //   CRUDL/MODULE_KEY/DELETE/SUCCESS: deleteSuccessModifier(...),\n  //   (...)\n  // }\n  get modifiers() {\n    const {\n      keys,\n      config,\n      constants,\n      operations,\n    } = this;\n\n    const {\n      clean,\n      start,\n      success,\n      failure,\n    } = config.executors || executors;\n\n    return Object.keys(operations).reduce((reduced, operation) => ({\n      ...reduced,\n\n      [constants[operation].clean](data) {\n        return clean(keys[operation], operations[operation], config, data);\n      },\n\n      [constants[operation].start](data, payload) {\n        return start(keys[operation], operations[operation], config, data, payload);\n      },\n\n      [constants[operation].success](data, response) {\n        return success(keys[operation], operations[operation], config, data, response);\n      },\n\n      [constants[operation].failure](data, error) {\n        return failure(keys[operation], operations[operation], config, data, error);\n      },\n    }), {});\n  }\n}\n","export default function urlCompiler(url = '', params = {}) {\n  const data = { ...params };\n\n  function replace(param) {\n    const match = param.match(/^:(.*?)(?=\\?|#|$)/);\n\n    if (match) {\n      const key = match[0].replace(/^:/, '');\n\n      delete data[key];\n      return params[key] || param;\n    }\n\n    return param;\n  }\n\n  return {\n    url: url.split('/').map(replace).join('/'),\n    data,\n  };\n}\n"],"sourceRoot":""}